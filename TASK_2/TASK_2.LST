Turbo Assembler	 Version 4.1	    02/09/25 23:42:34	    Page 1
task_2.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     org 100h
      4	0100  EB 6F 90		     Start: jmp	MAIN
      5
      6				     ;-----------------------------------------
      7				     ; Initialise screen address to es
      8				     ; Return: nothing
      9				     ; Destr: es
     10				     ;-----------------------------------------
     11	0103			     INIT_SCREEN proc
     12	0103  53			 push bx
     13	0104  BB B800			 mov bx, 0b800h
     14	0107  8E C3			 mov es, bx
     15	0109  5B			 pop bx
     16	010A  C3			 ret
     17	010B				 endp
     18				     ;-----------------------------------------
     19
     20				     ;-----------------------------------------
     21				     ; Put string at es:[di], where first  symbol ds:[si]
     22				     ;				    second, etc	  ds:[si + 1] and print	it cx times
     23				     ;				    last is	  ds:[si + 2]
     24				     ; Destr:	 al, cx, di, si
     25				     ;-----------------------------------------
     26	010B			     DRAW_LINE proc
     27	010B  57			 push di
     28	010C  51			 push cx
     29	010D  AC			 lodsb
     30	010E  AB			 stosw
     31	010F  AC			 lodsb
     32	0110  F3> AB			 rep stosw
     33	0112  AC			 lodsb
     34	0113  AB			 stosw
     35	0114  59			 pop cx
     36	0115  5F			 pop di
     37	0116  81 C7 00A0		 add di, 80 * 2
     38	011A  C3			 ret
     39	011B				 endp
     40				     ;-----------------------------------------
     41
     42				     ;-----------------------------------------
     43				     ; Put frame at es:[di], where first line	ds:[si]	    ---	ds:[si + 2]
     44				     ;				   second, etc	ds:[si + 3] ---	ds:[si + 5] and	print it cx times
     45				     ;				   last	is	ds:[si + 6] ---	ds:[si + 8]
     46				     ; Destr:	 al, bx, cx, di
     47				     ;-----------------------------------------
     48	011B			     DRAW_FRAME	proc
     49	011B  E8 FFED			 call DRAW_LINE
     50
     51	011E				 DRAW_N_LINES:
     52	011E  85 DB			 test bx, bx
     53	0120  74 08			 jz DRAW_N_LINES_END
     54	0122  56			 push si
     55	0123  E8 FFE5			 call DRAW_LINE
     56	0126  5E			 pop si
     57	0127  4B			 dec bx
Turbo Assembler	 Version 4.1	    02/09/25 23:42:34	    Page 2
task_2.asm



     58	0128  EB F4			 jmp DRAW_N_LINES
     59	012A				 DRAW_N_LINES_END:
     60
     61	012A  83 C6 03			 add si, 3
     62	012D  E8 FFDB			 call DRAW_LINE
     63	0130  C3			 ret
     64	0131				 endp
     65				     ;-----------------------------------------
     66
     67				     ;-----------------------------------------
     68				     ; Read number from	ds:[si]	and put	integer	result to ax
     69				     ; Destr ax
     70				     ;-----------------------------------------
     71	0131			     ATOI proc
     72	0131  51			 push cx
     73	0132  33 C0			 xor ax, ax	 ; ax =	0
     74	0134  B5 0A			 mov ch, 10
     75
     76	0136				 ATOI_READ_SYMBOL:
     77	0136  8A 0C			 mov cl, [si]
     78	0138  80 F9 30			 cmp cl, '0'
     79	013B  72 0F			 jb ATOI_END
     80	013D  80 F9 39			 cmp cl, '9'
     81	0140  77 0A			 ja ATOI_END
     82	0142  80 E9 30			 sub cl, '0'
     83	0145  F6 E5			 mul ch
     84	0147  02 C1			 add al, cl
     85	0149  46			 inc si
     86	014A  EB EA			 jmp ATOI_READ_SYMBOL
     87	014C				 ATOI_END:
     88	014C  59			 pop cx
     89	014D  C3			 ret
     90	014E				 endp
     91				     ;-----------------------------------------
     92
     93				     ;-----------------------------------------
     94				     ; Skip spaces at ds:[si] by incrementing si
     95				     ;-----------------------------------------
     96	014E			     SKIP_SPACES proc
     97	014E  51			 push cx
     98	014F				 SKIP_SPACES_BEGIN:
     99	014F  8A 0C			 mov cl, [si]
    100	0151  80 F9 20			 cmp cl, ' '
    101	0154  75 F6			 jne ATOI_END
    102	0156  46			 inc si
    103	0157  EB F6			 jmp SKIP_SPACES_BEGIN
    104	0159				 SKIP_SPACES_END:
    105	0159  59			 pop cx
    106	015A  C3			 ret
    107	015B				 endp
    108				     ;-----------------------------------------
    109
    110				     ;-----------------------------------------
    111				     ; Read string from	ds:[si]
    112				     ;-----------------------------------------
    113	015B			     PARSE_COMMAND_LINE	proc
    114	015B  56			 push si
Turbo Assembler	 Version 4.1	    02/09/25 23:42:34	    Page 3
task_2.asm



    115	015C  BE 0081			 mov si, 81h
    116	015F  E8 FFEC			 call SKIP_SPACES
    117	0162  E8 FFCC			 call ATOI
    118	0165  8B D8			 mov bx, ax
    119	0167  E8 FFE4			 call SKIP_SPACES
    120	016A  E8 FFC4			 call ATOI
    121	016D  8B C8			 mov cx, ax
    122
    123	016F  5E			 pop si
    124	0170  C3			 ret
    125	0171				 endp
    126				     ;-----------------------------------------
    127
    128	0171			     MAIN:
    129	0171  FC			 cld				; for correct work string functions
    130	0172  E8 FF8E			 call INIT_SCREEN
    131	0175  E8 FFE3			 call PARSE_COMMAND_LINE
    132	0178  BE 018Er			 mov si, offset	FRAME_PATTERN ;	set character data
    133
    134	017B  BF 0326			 mov di, (5 * 80 * 2) +	3 * 2 ;	initial	offset
    135	017E  B4 6A			 mov ah, 1101010b	 ; set color mode
    136					 ; mov bx, 5 ; width
    137					 ; mov cx, 8 ; height
    138
    139	0180  83 EB 02			 sub bx, 2 ;
    140	0183  83 E9 02			 sub cx, 2 ; decrease to include border	in number
    141
    142	0186  E8 FF92			 call DRAW_FRAME
    143
    144					 ; Finish Programm
    145	0189  B8 4C00			 mov ax, 4c00h			     ; ax = 4c00h
    146	018C  CD 21			     int 21h
    147
    148	018E  31 32 33 34 35 36	37+  FRAME_PATTERN: db '123456789'
    149	      38 39
    150
    151				     end Start
Turbo Assembler	 Version 4.1	    02/09/25 23:42:34	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/09/25"
??FILENAME			  Text	 "task_2  "
??TIME				  Text	 "23:42:34"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 TASK_2
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ATOI				  Near	 DGROUP:0131
ATOI_END			  Near	 DGROUP:014C
ATOI_READ_SYMBOL		  Near	 DGROUP:0136
DRAW_FRAME			  Near	 DGROUP:011B
DRAW_LINE			  Near	 DGROUP:010B
DRAW_N_LINES			  Near	 DGROUP:011E
DRAW_N_LINES_END		  Near	 DGROUP:012A
FRAME_PATTERN			  Near	 DGROUP:018E
INIT_SCREEN			  Near	 DGROUP:0103
MAIN				  Near	 DGROUP:0171
PARSE_COMMAND_LINE		  Near	 DGROUP:015B
SKIP_SPACES			  Near	 DGROUP:014E
SKIP_SPACES_BEGIN		  Near	 DGROUP:014F
SKIP_SPACES_END			  Near	 DGROUP:0159
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0197 Word	  Public  CODE
