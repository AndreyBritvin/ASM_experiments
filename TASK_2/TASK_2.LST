Turbo Assembler	 Version 4.1	    02/09/25 20:32:04	    Page 1
task_2.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     org 100h
      4	0100  EB 55 90		     Start: jmp	MAIN
      5				     ;-----------------------------------------
      6				     ;
      7				     ; Req: bx - string	address
      8				     ;	    cx - coordinates, where
      9				     ;		 ch - x	coord
     10				     ;		 cl - y	coord
     11				     ;	     dh	- color	mode
     12				     ; Assumes:	es = 0b800h
     13				     ; Destr: bx, cx, si
     14				     ;
     15				     ;-----------------------------------------
     16	0103			     DRAW_FRAME	proc
     17	0103  56			 push si
     18	0104  E8 001C			 call DRAW_LINE
     19
     20	0107				 DR_FRAME_DRAW_MIDDLE_BEGIN:
     21	0107  84 ED			 test ch, ch
     22	0109  74 10			 jz DR_FRAME_DRAW_MIDDLE_END ; while ch	> 0
     23	010B  81 C7 00A0		 add di, 80 * 2		     ; di += 80	* 2
     24	010F  8B F3			 mov si, bx
     25	0111  E8 000F			 call DRAW_LINE		     ; draw_line()
     26	0114  8B DE			 mov bx, si
     27	0116  80 ED 01			 sub ch, 1		     ; ch--;
     28
     29	0119  EB EC			 jmp DR_FRAME_DRAW_MIDDLE_BEGIN
     30	011B				 DR_FRAME_DRAW_MIDDLE_END:
     31
     32	011B  83 C3 03			 add bx, 3
     33	011E  E8 0002			 call DRAW_LINE
     34	0121  5E			 pop si
     35	0122  C3			 ret
     36	0123				 endp
     37				     ;-----------------------------------------
     38
     39
     40				     ;-----------------------------------------
     41				     ; Req:
     42				     ;-----------------------------------------
     43	0123			     DRAW_LINE proc
     44	0123  51			 push cx
     45	0124  57			 push di
     46
     47	0125  8A 17			 mov dl, [bx]	     ; dx = current symbol
     48	0127  26: 89 15			 mov es:[di], dx
     49	012A  83 C7 02			 add di, 2	     ; di += 2
     50	012D  83 C3 01			 add bx, 1	     ; bx += 1,	next symbol
     51
     52	0130  8A 17			 mov dl, [bx]	     ; dx = current symbol
     53
     54	0132				 DR_LINE_LOOP_BEGIN:
     55	0132  84 C9			 test cl, cl
     56	0134  74 0B			 jz DR_LINE_END_LOOP	    ; while cl > 0
     57	0136  26: 89 15			 mov es:[di], dx	    ; put at [di] symbol in dx
Turbo Assembler	 Version 4.1	    02/09/25 20:32:04	    Page 2
task_2.asm



     58	0139  83 C7 02			 add di, 2		    ; di += 2
     59	013C  80 E9 01			 sub cl, 1		    ; cl--
     60	013F  EB F1			 jmp DR_LINE_LOOP_BEGIN	    ; loop
     61	0141				 DR_LINE_END_LOOP:
     62
     63	0141  83 C3 01			 add bx, 1
     64
     65	0144  8A 17			 mov dl, [bx]	     ; dx = current symbol
     66	0146  26: 89 15			 mov es:[di], dx
     67	0149  83 C3 01			 add bx, 1	     ; bx += 1,	next symbol
     68
     69	014C  5F			 pop di
     70	014D  59			 pop cx
     71	014E  C3			 ret
     72	014F				 endp
     73				     ;-----------------------------------------
     74
     75				     ;-----------------------------------------
     76				     ; Initialise screen address to es
     77				     ; Destr: es
     78				     ;-----------------------------------------
     79	014F			     INIT_SCREEN proc
     80	014F  53			 push bx
     81	0150  BB B800			 mov bx, 0b800h
     82	0153  8E C3			 mov es, bx
     83	0155  5B			 pop bx
     84	0156  C3			 ret
     85	0157				 endp
     86				     ;-----------------------------------------
     87
     88	0157			     MAIN:
     89	0157  E8 FFF5			 call INIT_SCREEN
     90
     91	015A  BB 016Er			 mov bx, offset	FRAME_PATTERN ;	set character data
     92	015D  BF 0326			 mov di, (5 * 80 * 2) +	3 * 2 ;	initial	offset
     93	0160  B6 6A			 mov dh, 1101010b	 ; set color mode
     94	0162  B5 03			 mov ch, 3		 ; set width
     95	0164  B1 05			 mov cl, 5		 ; set height
     96	0166  E8 FF9A			 call DRAW_FRAME
     97
     98					 ; Finish Programm
     99	0169  B8 4C00			 mov ax, 4c00h			     ; ax = 4c00h
    100	016C  CD 21			     int 21h
    101
    102	016E  31 32 33 34 35 36	37+  FRAME_PATTERN: db '123456789'
    103	      38 39
    104
    105				     end Start
Turbo Assembler	 Version 4.1	    02/09/25 20:32:04	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/09/25"
??FILENAME			  Text	 "task_2  "
??TIME				  Text	 "20:32:04"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 TASK_2
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
DRAW_FRAME			  Near	 DGROUP:0103
DRAW_LINE			  Near	 DGROUP:0123
DR_FRAME_DRAW_MIDDLE_BEGIN	  Near	 DGROUP:0107
DR_FRAME_DRAW_MIDDLE_END	  Near	 DGROUP:011B
DR_LINE_END_LOOP		  Near	 DGROUP:0141
DR_LINE_LOOP_BEGIN		  Near	 DGROUP:0132
FRAME_PATTERN			  Near	 DGROUP:016E
INIT_SCREEN			  Near	 DGROUP:014F
MAIN				  Near	 DGROUP:0157
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0177 Word	  Public  CODE
